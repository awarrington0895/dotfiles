" .ideavimrc is a configuration file for IdeaVim plugin. It uses
"   the same commands as the original .vimrc configuration.
" You can find a list of commands here: https://jb.gg/h38q75
" Find more examples here: https://jb.gg/share-ideavimrc

"" -- Suggested options --
" Show a few lines of context around the cursor. Note that this makes the
" text scroll if you mouse-click near the start or end of the window.

" Options
let mapleader = ' '
let maplocalleader = ' '

let g:highlightedyank_highlight_duration = "300"

set scrolloff=11
set number relativenumber
set showcmd
set visualbell
set incsearch
set ignorecase
set smartcase
set functiontextobj
set clipboard+=unnamed

" Don't use Ex mode, use Q for formatting.
map Q gq

" --- Enable IdeaVim plugins https://jb.gg/ideavim-plugins

" Highlight copied text
Plug 'machakann/vim-highlightedyank'

" Commentary plugin
Plug 'tpope/vim-commentary'

" Replace with register
Plug 'vim-scripts/ReplaceWithRegister'

" Nerdtree
set nerdtree

" EasyMotion
set easymotion

" WhichKey
set which-key
set notimeout

" Remaps
imap jj <Esc>

map <leader>x <Action>(HideSideWindows)
map <leader>z <Action>(ToggleZenMode)

" Create new lines without entering insert mode
map <leader>o o<Esc>k
map <leader>O O<Esc>j

" Finders
map <leader>ff <Action>(GotoClass)
map <leader>sf <Action>(GotoFile)
map <leader>j <Plug>(easymotion-s)

map <leader>c <Action>(CommentByLineComment)

map <leader>e :NERDTreeToggle<CR>

" Harpoon
map <leader>h <Action>(HarpoonerAddFile)
map <leader>H <Action>(HarpoonerToggleQuickMenu)
map <A-j> <Action>(HarpoonerOpenFile0)
map <A-k> <Action>(HarpoonerOpenFile1)
map <A-l> <Action>(HarpoonerOpenFile2)
map <A-;> <Action>(HarpoonerOpenFile3)

" Splits
map <leader>wl <Action>(SplitVertically)
map <leader>wj <Action>(SplitHorizontally)
map <leader>wo <Action>(Unsplit)

" Refactoring
map <leader>rn <Action>(RenameElement)
map <leader>rm <Action>(ExtractMethod)
map <leader>rv <Action>(IntroduceVariable)
map <leader>rf <Action>(IntroduceField)
map <leader>rs <Action>(ChangeSignature)
map <leader>rr <Action>(Refactorings.QuickListPopupAction)
let g:WhichKeyDesc_rename_element = "<leader>rn Rename Element"
let g:WhichKeyDesc_extract_method = "<leader>rm Extract Method"
let g:WhichKeyDesc_rename_element = "<leader>rv IntroduceVariable"
let g:WhichKeyDesc_rename_element = "<leader>rf IntroduceField"
let g:WhichKeyDesc_rename_element = "<leader>rs Rename ElementRename ElementRename Element"
let g:WhichKeyDesc_rename_element = "<leader>rr Rename Element"

" Context Actions
map <leader>am <Action>(ShowIntentionActions)
map <leader>q <Action>(CloseContent)

" Executive Actions
map \R <Action>(RunClass)
map \r <Action>(Run)
map \d <Action>(Debug)
map \vr <Action>(IdeaVim.ReloadVimRc.reload)

" Toggles
map \tz <Action>(ToggleZenMode)
let g:WhichKeyDesc_zen_mode = "\\tz Toggle Zen mode"

nmap gl $
nmap gh ^
vmap gl $
vmap gh ^

nmap <leader>p "+p
nmap <leader>P "+P

" Easier page navigation
map <C-d> <C-d>zz
map <C-u> <C-u>zz
map <C-k> <Action>(MethodUp)
map <C-j> <Action>(MethodDown)

vmap <leader>R "+p
let g:WhichKeyDesc_visual_replace_in_reg = "<leader>R Replace in register"

"" -- Map IDE actions to IdeaVim -- https://jb.gg/abva4t
"" Map \r to the Reformat Code action
"map \r <Action>(ReformatCode)

"" Map <leader>d to start debug
"map <leader>d <Action>(Debug)

"" Map \b to toggle the breakpoint on the current line
"map \b <Action>(ToggleLineBreakpoint)
